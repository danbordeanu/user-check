// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/status": {
            "get": {
                "description": "This return API status",
                "produces": [
                    "application/json"
                ],
                "summary": "HealthCheck Endpoint",
                "responses": {
                    "200": {
                        "description": "api pid and ldap status",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/usercheck/{isid}": {
            "get": {
                "description": "This will validate if user is part of the group",
                "produces": [
                    "application/json"
                ],
                "summary": "UserCheck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User isid",
                        "name": "isid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "true or false",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/usercount": {
            "get": {
                "description": "This will return number of users in the group",
                "produces": [
                    "application/json"
                ],
                "summary": "UserGroupCount",
                "responses": {
                    "200": {
                        "description": "success or failure",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
